name: Build
on:
  workflow_dispatch:
    inputs:
      onnxruntime-version:
        description: "ONNX Runtime version"
        type: string
  push:
    tags:
      - v*.*.*
env:
  GCC_VERSION: 11
  CMAKE_VERSION: 3.28
  PYTHON_VERSION: 3.11
  NODE_VERSION: 20
  XCODE_VERSION: 14.2
  MACOSX_DEPLOYMENT_TARGET: 10.15
defaults:
  run:
    shell: bash
jobs:
  build:
    name: Build (macOS)
    runs-on: macos-13-xlarge
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Configure Git
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
      
      - name: Setup CMake
        uses: lukka/get-cmake@latest
        with:
          cmakeVersion: ${{ env.CMAKE_VERSION }}
      
      - name: Setup Python
        id: setup-python
        continue-on-error: true
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      
      - name: Install Python (macOS)
        if: steps.setup-python.outcome == 'failure'
        run: brew install python@${{ env.PYTHON_VERSION }}
      
      - name: Setup Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: ${{ env.XCODE_VERSION }}
      
      - name: Set ONNX Runtime version
        run: |
          if ${{ startsWith(github.ref, 'refs/tags/v') }}; then
            echo ONNXRUNTIME_VERSION=${GITHUB_REF_NAME#v} >> $GITHUB_ENV
          elif [ -n "${{ inputs.onnxruntime-version }}" ]; then
            echo ONNXRUNTIME_VERSION=${{ inputs.onnxruntime-version }} >> $GITHUB_ENV
          else
            echo ONNXRUNTIME_VERSION=$(cat ONNXRUNTIME_VERSION) >> $GITHUB_ENV
          fi
      
      - name: Set environment variables
        run: |
          echo OUTPUT_DIR=./output >> $GITHUB_ENV
          echo ARCHIVE_DIR="${{ runner.temp }}" >> $GITHUB_ENV
          echo ARCHIVE_NAME=onnxruntime-osx-universal2-static_lib-${{ env.ONNXRUNTIME_VERSION }} >> $GITHUB_ENV
      
      - name: Build
        run: |
          CMAKE_OPTIONS="-DCMAKE_OSX_ARCHITECTURES=arm64;x86_64" \
          BUILD_CONFIG=Release \
          ./build-static_lib.sh
      
      - name: Post build
        run: tar -czvf $ARCHIVE_DIR/$ARCHIVE_NAME.tgz -C $OUTPUT_DIR .
      
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.ARCHIVE_NAME }}
          path: ${{ env.ARCHIVE_DIR }}/${{ env.ARCHIVE_NAME }}.*
  
  release:
    name: Release
    if: startsWith(github.ref, 'refs/tags/v')
    needs: build
    runs-on: ubuntu-22.04
    permissions:
      contents: write
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
      
      - name: Release
        uses: ncipollo/release-action@v1
        with:
          omitName: true
          body: "Official Release: [ONNX Runtime ${{ github.ref_name }}](https://github.com/microsoft/onnxruntime/releases/tag/${{ github.ref_name }})"
          artifacts: "*/*.*"
          allowUpdates: true
          omitNameDuringUpdate: true
          omitBodyDuringUpdate: true
          omitPrereleaseDuringUpdate: true
          omitDraftDuringUpdate: false
